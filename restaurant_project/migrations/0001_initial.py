# Generated by Django 4.0.4 on 2022-05-30 04:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User_Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта пользователя')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Имя пользователя')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Зарегистрирован')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Был последний раз')),
                ('profile_username', models.SlugField(blank=True, verbose_name='Профильное имя')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Аккаунт пользователя',
                'verbose_name_plural': 'Аккаунты пользователей',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Названия категорий')),
                ('url', models.URLField(null=True, verbose_name='Иконка категорий')),
            ],
            options={
                'verbose_name': 'Категория блюдо',
                'verbose_name_plural': 'Категорий блюдо',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название блюдо')),
                ('content', models.TextField(verbose_name='О блюдо')),
                ('price', models.IntegerField(verbose_name='Цена блюдо')),
                ('photo', models.URLField(null=True, verbose_name='Фотография блюдо')),
                ('url', models.SlugField(max_length=25, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='restaurant_project.category', verbose_name='Категорий блюдо')),
                ('dish_likes', models.ManyToManyField(related_name='dish_likes', to=settings.AUTH_USER_MODEL, verbose_name='Лайки блюдо')),
            ],
            options={
                'verbose_name': 'Меню',
                'verbose_name_plural': 'Меню',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Контент пользователя')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата комментария')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant_project.menu', verbose_name='Блюдо пользователя')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='restaurant_project.reviews', verbose_name='Родитель')),
                ('review_likes', models.ManyToManyField(related_name='review_likes', to=settings.AUTH_USER_MODEL, verbose_name='Review Likes')),
                ('review_unlikes', models.ManyToManyField(related_name='review_unlikes', to=settings.AUTH_USER_MODEL, verbose_name='Review unlikes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь комментария')),
            ],
            options={
                'verbose_name': 'Комментарий о блюдо',
                'verbose_name_plural': 'Комментарий о блюдов',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, verbose_name='Биография пользователя')),
                ('country', models.CharField(blank=True, max_length=25, verbose_name='Страна пользователя')),
                ('account_image', models.ImageField(blank=True, upload_to='media/%Y/%m/%d', verbose_name='Изображения пользователя')),
                ('profile_username', models.SlugField(null=True, verbose_name='Профильное имя')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт профиля')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
        migrations.CreateModel(
            name='ContactReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('time_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата комментария')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь комментария')),
            ],
            options={
                'verbose_name': 'Комменатрий контактов',
                'verbose_name_plural': 'Комментарий контакту',
            },
        ),
    ]
